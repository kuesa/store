{"version":3,"sources":["components/Prints.js","actions/actions.js","actions/actionTypes.js","containers/RemoveItem.js","containers/ChangeItemQuantity.js","components/CartItem.js","components/Cart.js","containers/CurrentCart.js","components/CartButton.js","containers/UpdatedCartButton.js","components/Navbar.js","components/Pens.js","containers/AddItem.js","components/Product.js","components/checkout_steps/Shipping.js","components/checkout_steps/Billing.js","components/checkout_steps/SummaryItem.js","components/checkout_steps/Summary.js","components/CheckoutForm.js","components/Checkout.js","containers/CurrentCheckout.js","components/Batons.js","components/NotFound.js","components/About.js","App.js","serviceWorker.js","reducers/reducers.js","reducers/cart.js","index.js"],"names":["Prints","props","componentDidMount","fetch","process","then","response","json","data","setState","items","prints","loading","state","style","paddingLeft","paddingRight","gutter","this","map","item","span","marginTop","key","id","to","hoverable","cover","alt","src","photos","Meta","title","name","description","React","Component","removeItem","sku","type","RemoveItem","onSubmit","e","preventDefault","dispatch","htmlType","connect","ChangeItemQuantity","min","value","qty","onChange","CartItem","base_price","wood","printName","modifier","modifiers","subtotal","price","className","active","paragraph","rows","padding","Cart","handleClick","history","push","margin","textAlign","onClick","withRouter","CurrentCart","cartItems","CartButton","count","itemCount","shape","ShoppingCartOutlined","UpdatedCartButton","i","Navbar","Header","mode","defaultSelectedKeys","Item","Home","width","AddItem","Product","product","productId","match","params","Number","toString","selected_type","types","typeName","handleChangeModifier","new_sku","selected_modifier","handleChangeType","indexOf","substr","photo","onSelect","placeholder","marginBottom","idx","Option","Shipping","state_list","states","handleSelect","selected_state","label","rules","required","message","Billing","handleToggle","sameShip","Title","Text","SummaryItem","addFunc","justify","maxWidth","level","strong","Summary","addToTotal","amt","total","CheckoutForm","method","headers","body","JSON","stringify","secret","catch","err","console","error","next","current","prev","purchaseComplete","errorMsg","submit","bind","ev","values","stripe","elements","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","address","city","bill_city","country","line1","bill_address1","address1","line2","bill_address2","address2","postal_code","bill_zip","zip","bill_state","email","bill_email","bill_name","shipping","paymentIntent","log","status","steps","content","spinning","tip","Step","labelCol","xs","sm","wrapperCol","onFinish","length","disabled","marginLeft","subTitle","extra","stripePromise","loadStripe","Checkout","CurrentCheckout","Batons","icon","ClockCircleOutlined","NotFound","Paragraph","About","size","href","InstagramOutlined","GithubOutlined","LinkedinOutlined","App","path","exact","component","Pens","Boolean","window","location","hostname","action","found","filter","Object","assign","cart","combineReducers","reducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","STATE_FROM_SERVER","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b20e0a57.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Card, Row, Col } from 'antd';\n\nclass Prints extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n            loading: true\n        }\n    }\n\n    componentDidMount = () => {\n        fetch(`${process.env.REACT_APP_API}/prints/`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    items: data.prints,\n                    loading: false\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div style={{ paddingLeft: '10%', paddingRight: '10%' }}>\n                <Row gutter={16}>\n                    {\n                        this.state.items.map(item => (\n                            <Col span={8} style={{ marginTop: 40 }} key={item.id}>\n                                <Link to={`/prints/${item.id}`}>\n                                    <Card\n                                        hoverable\n                                        cover={\n                                            <img\n                                                alt='Print'\n                                                src={item.photos[0]}\n                                            />\n                                        }\n                                    >\n                                        <Card.Meta\n                                            title={item.name}\n                                            description='$20'\n                                        />\n                                    </Card>\n                                </Link>\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Prints;","import { ADD_ITEM, REMOVE_ITEM, CHANGE_QUANTITY, REMOVE_ALL } from './actionTypes';\r\n\r\nexport function addItem(sku, qty) {\r\n    return {\r\n        type: ADD_ITEM,\r\n        sku,\r\n        qty\r\n    };\r\n}\r\n\r\nexport function removeItem(sku) {\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        sku\r\n    };\r\n}\r\n\r\nexport function changeQuantity(sku, qty) {\r\n    return {\r\n        type: CHANGE_QUANTITY,\r\n        sku,\r\n        qty\r\n    };\r\n}\r\n\r\nexport function removeAll() {\r\n    return { type: REMOVE_ALL };\r\n}","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const CHANGE_QUANTITY = 'CHANGE_QUANTITY';\r\nexport const REMOVE_ALL = 'REMOVE_ALL';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeItem } from '../actions/actions';\r\n\r\nimport { Button } from 'antd';\r\n\r\nlet RemoveItem = (props) => {\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    props.dispatch(removeItem(props.sku));\r\n                }}\r\n            >\r\n                <Button type='primary' htmlType='submit'>Remove Item</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nRemoveItem = connect()(RemoveItem);\r\n\r\nexport default RemoveItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeQuantity, removeItem } from '../actions/actions';\r\n\r\nimport { InputNumber } from 'antd';\r\n\r\nlet ChangeItemQuantity = (props) => {\r\n    return (\r\n        <div>\r\n            <InputNumber min={0} value={props.qty} onChange={value => {\r\n                if (value > 0) {\r\n                    props.dispatch(changeQuantity(props.sku, value));\r\n                } else {\r\n                    props.dispatch(removeItem(props.sku));\r\n                }\r\n            }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nChangeItemQuantity = connect()(ChangeItemQuantity);\r\n\r\nexport default ChangeItemQuantity;","import React from 'react';\r\nimport RemoveItem from '../containers/RemoveItem';\r\nimport ChangeItemQuantity from '../containers/ChangeItemQuantity';\r\n\r\nimport { Row, Col, Skeleton, Divider } from 'antd';\r\n\r\n/* CartItem.js - Props (for sanity)\r\n *     sku: string - the id (SKU, if you will), of the item\r\n *     qty: int - the number of items\r\n *     onRemove() - callback to invoke when the item is selected to be removed\r\n *     onChangeQty() - callback to invoke when the item's quantity is changed\r\n * \r\n*/\r\n\r\nclass CartItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            name: 'Loading...',\r\n            description: 'Loading...',\r\n            base_price: 'Loading...',\r\n            wood: 'Loading...',\r\n            printName: '',\r\n            modifier: { 'Loading...': 0 },\r\n            subtotal: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(`${process.env.REACT_APP_API}/sku/` + this.props.sku)\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                this.setState({\r\n                    loading: false,\r\n                    name: item.item.name,\r\n                    description: item.item.description,\r\n                    base_price: item.item.base_price,\r\n                    wood: item.wood,\r\n                    printName: item.printName,\r\n                    modifier: item.item.modifiers ? item.item.modifiers[item.modifier] : { name: '' },\r\n                    subtotal: item.item.base_price + (item.item.modifiers ? item.item.modifiers[item.modifier].price : 0)\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='cartItem'>\r\n                {\r\n                    this.state.loading\r\n                        ?\r\n                        <>\r\n                            <Skeleton active paragraph={{ rows: 2 }} />\r\n                            <Divider />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Row>\r\n                                <Col style={{ padding: '4px' }} span={10}><h3>{`${this.state.modifier.name} ${this.state.name} ${this.state.wood ? '(' + this.state.wood + ')' : ''}${this.state.printName ? '(' + this.state.printName + ')' : ''}`}</h3></Col>\r\n                                <Col style={{ padding: '4px' }} span={3}><h3>{`$${this.state.subtotal}.00`}</h3></Col>\r\n                                <Col style={{ padding: '4px' }} span={4}><RemoveItem sku={this.props.sku} /></Col>\r\n                                <Col style={{ padding: '4px' }} span={3}><ChangeItemQuantity sku={this.props.sku} qty={this.props.qty} /></Col>\r\n                                <Col style={{ padding: '4px' }} span={1}><h3>{`$${this.state.subtotal * this.props.qty}.00`}</h3></Col>\r\n                            </Row>\r\n                            <Divider />\r\n                        </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CartItem;","import React from 'react';\r\nimport CartItem from './CartItem';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Row, Col, Divider, Button } from 'antd';\r\n\r\nimport './Cart.css';\r\n\r\n/* Cart.js - Props (for sanity)\r\n *     items: Array - an array of cart items with { id, price, qty } shape\r\n *     onRemoveItem(id: int) - callback to invoke when removing an item frome the list\r\n *     onChangeItemQty(id: int) - a callback to invoke when changing the quantity of an item\r\n * \r\n*/\r\n\r\n\r\nclass Cart extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 id='title'>Shopping Cart</h1>\r\n                <div style={{ margin: '40px 12.5% 25px', textAlign: 'center' }}>\r\n                    <Row>\r\n                        <Col span={4}>Item</Col>\r\n                        <Col span={13}>Price</Col>\r\n                        <Col span={1}>Quantity</Col>\r\n                        <Col span={4}>Total</Col>\r\n                    </Row>\r\n                    <Divider />\r\n                </div>\r\n                {\r\n                    this.props.items.map((item) => {\r\n                        return (\r\n                            <CartItem key={item.sku} sku={item.sku} modifier={item.modifier} qty={item.qty} />\r\n                        )\r\n                    })\r\n                }\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <Button type='primary' onClick={this.handleClick}>Checkout</Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Cart);","import { connect } from 'react-redux';\r\nimport Cart from '../components/Cart';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        items: state.cartItems\r\n    };\r\n}\r\n\r\nconst CurrentCart = connect(mapStateToProps)(Cart);\r\n\r\nexport default CurrentCart;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Badge, Button } from 'antd';\r\n\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\n\r\nclass CartButton extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.history.push('/cart');\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Badge count={this.props.itemCount}>\r\n                <Button\r\n                    type='primary'\r\n                    shape='round'\r\n                    onClick={this.handleClick}\r\n                >\r\n                    <ShoppingCartOutlined />\r\n                    Cart\r\n                </Button>\r\n            </Badge>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CartButton);","import { connect } from 'react-redux';\r\nimport CartButton from '../components/CartButton';\r\n\r\nconst mapStateToProps = state => {\r\n    let items = 0;\r\n\r\n    for ( let i in state.cartItems) {\r\n        items += state.cartItems[i].qty;\r\n    }\r\n    return {\r\n        itemCount: items\r\n    };\r\n}\r\n\r\nconst UpdatedCartButton = connect(mapStateToProps)(CartButton);\r\n\r\nexport default UpdatedCartButton;","import React from 'react';\r\n\r\nimport { Layout, Menu, Row, Col } from 'antd';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport UpdatedCartButton from '../containers/UpdatedCartButton';\r\n\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Layout id='navbar-layout'>\r\n                <Layout.Header id='header'>\r\n                    <Row>\r\n                        <Col span={4} id='logo'>\r\n                            <h1>Noah Grove</h1>\r\n                        </Col>\r\n                        <Col span={18}>\r\n                            <Menu mode='horizontal' id='nav' defaultSelectedKeys={['prints']}>\r\n                                <Menu.Item key='prints'><NavLink to='/prints'>Prints</NavLink></Menu.Item>\r\n                                <Menu.Item key='pens'><NavLink to='/pens'>Pens</NavLink></Menu.Item>\r\n                                <Menu.Item key='batons'><NavLink to='/batons'>Batons</NavLink></Menu.Item>\r\n                                <Menu.Item key='about'><NavLink to='/about'>About</NavLink></Menu.Item>\r\n                            </Menu>\r\n                        </Col>\r\n                        <Col span={2} style={{ marginTop: '10px' }}>\r\n                            <UpdatedCartButton />\r\n                        </Col>\r\n                    </Row>\r\n                </Layout.Header>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Card, Row, Col } from 'antd';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 40 }}>\r\n                <Row gutter={16} >\r\n                    <Col span={8} />\r\n                    <Col span={4}>\r\n                        <Link to='/pens/fountain'>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: '85%' }}\r\n                                cover={\r\n                                    <img\r\n                                        alt='Pen'\r\n                                        src='https://i.imgur.com/zQ0XWu3.jpg'\r\n                                    />\r\n                                }\r\n                            >\r\n                                <Card.Meta title='Fountain Pen' description='$40' />\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <Link to='/pens/rollerball'>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: '85%' }}\r\n                                cover={\r\n                                    <img\r\n                                        alt='Pen'\r\n                                        src='https://i.imgur.com/mB0jJyq.jpg'\r\n                                    />\r\n                                }\r\n                            >\r\n                                <Card.Meta title='Rollerball Pen' description='$35' />\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col span={8} />\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/actions';\r\n\r\nimport { Button } from 'antd';\r\n\r\nlet AddItem = (props) => {\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    props.dispatch(addItem(props.sku, 1));\r\n                }}\r\n            >\r\n                <Button type='primary' htmlType='submit'>Add To Cart</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddItem = connect()(AddItem);\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Carousel, Skeleton, Select, Row, Col } from 'antd';\r\nimport AddItem from '../containers/AddItem';\r\n\r\nclass Product extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            name: 'Loading...',\r\n            description: 'Loading...',\r\n            base_price: 0,\r\n            modifiers: [],\r\n            types: [],\r\n            typeName: '',\r\n            photos: [],\r\n            selected_modifier: 0,\r\n            selected_type: 0,\r\n            sku: this.props.productId + '00'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let product = this.props.productId;\r\n        if (this.props.match.params.id) {\r\n            product = Number(product.toString() + this.props.match.params.id);\r\n            this.setState({ sku: '9' + this.state.selected_type + this.props.match.params.id });\r\n        }\r\n        fetch(`${process.env.REACT_APP_API}/items/` + product)\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                this.setState({\r\n                    loading: false,\r\n                    name: item.item.name,\r\n                    description: item.item.description,\r\n                    base_price: item.item.base_price,\r\n                    modifiers: item.item.modifiers,\r\n                    types: item.types,\r\n                    photos: item.item.photos,\r\n                    typeName: item.typeName\r\n                });\r\n            });\r\n    }\r\n\r\n    handleChangeModifier = e => {\r\n        let new_sku = this.state.sku[0] + this.state.sku[1] + e;\r\n        this.setState({\r\n            selected_modifier: e,\r\n            sku: new_sku\r\n        });\r\n    }\r\n\r\n    handleChangeType = e => {\r\n        let new_sku = this.state.sku[0] + this.state.types.indexOf(e) + this.state.sku.substr(2);\r\n        this.setState({\r\n            selected_type: e,\r\n            sku: new_sku\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.loading ?\r\n                <div style={{ marginTop: 40 }}>\r\n                    <Row>\r\n                        <Col span={8} />\r\n                        <Col span={8}>\r\n                            <Skeleton />\r\n                        </Col>\r\n                        <Col span={8} />\r\n                    </Row>\r\n                </div>\r\n                :\r\n                <div style={{ marginTop: 40 }}>\r\n                    <Row>\r\n                        <Col span={4} />\r\n                        <Col span={7}>\r\n                            <Carousel style={{ width: '100%' }}>\r\n                                {this.state.photos.map((photo) => <div key={this.state.photos.indexOf(photo)}><img src={photo} style={{ width: '100%' }} alt='Product' /></div>)}\r\n                            </Carousel>\r\n                        </Col>\r\n                        <Col span={2} />\r\n                        <Col span={4}>\r\n                            <h1>{this.state.name}</h1>\r\n                            <p>{this.state.description}</p>\r\n                            <h3 style={{ marginTop: '60%' }}>{`$${this.state.base_price}`}</h3>\r\n                            <Select onSelect={this.handleChangeType} placeholder={this.state.typeName} style={{ width: 110, marginBottom: 12 }}>\r\n                                {this.state.types.map((type, idx) => <Select.Option key={idx} value={type}>{type}</Select.Option>)}\r\n                            </Select>\r\n                            {\r\n                                this.state.typeName === 'Wood' ?\r\n                                    <Select onSelect={this.handleChangeModifier} placeholder='Metal' style={{ width: 110, marginBottom: 12 }}>\r\n                                        <Select.Option value='0'>Chrome</Select.Option>\r\n                                        <Select.Option value='1'>Gold (+$5)</Select.Option>\r\n                                    </Select> :\r\n                                    null\r\n                            }\r\n                            <AddItem sku={this.state.sku} />\r\n                        </Col>\r\n                        <Col span={7} />\r\n                    </Row>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Product);","import React from 'react';\r\n\r\nimport { Form, Input, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Shipping extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected_state: 'California',\r\n            states: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch('https://gist.githubusercontent.com/mshafrir/2646763/raw/8b0dbb93521f5d6889502305335104218454c2bf/states_titlecase.json')\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                let state_list = item.map(item => item.name);\r\n\r\n                this.setState({\r\n                    states: state_list\r\n                });\r\n            });\r\n    }\r\n\r\n    handleSelect = value => {\r\n        this.setState({\r\n            selected_state: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Form.Item\r\n                    label='Name'\r\n                    name='name'\r\n                    rules={[{ required: true, message: 'Name is required' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label='Email'\r\n                    name='email'\r\n                    rules={[{ required: true, message: 'Email is required' }]}\r\n                >\r\n                    <Input type='email' />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label='Address'\r\n                    name='address1'\r\n                    rules={[{ required: true, message: 'Address is required' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label='Apt/Suite/Room'\r\n                    name='address2'\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label='City'\r\n                    name='city'\r\n                    rules={[{ required: true, message: 'City is required' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label='State'\r\n                    name='state'\r\n                    rules={[{ required: true, message: 'State is required' }]}\r\n                >\r\n                    <Select placeholder='Select state'>\r\n                        {\r\n                            this.state.states.map(item => (<Option key={item} value={item}>{item}</Option>))\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label='ZIP Code'\r\n                    name='zip'\r\n                    rules={[{ required: true, message: 'ZIP is required' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shipping;","import React from 'react';\r\n\r\nimport { CardElement } from '@stripe/react-stripe-js';\r\n\r\nimport { Form, Input, Checkbox, Select } from 'antd';\r\n\r\nimport './Billing.css';\r\n\r\nconst { Option } = Select;\r\n\r\nclass Billing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sameShip: false,\r\n            selected_state: 'California',\r\n            states: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch('https://gist.githubusercontent.com/mshafrir/2646763/raw/8b0dbb93521f5d6889502305335104218454c2bf/states_titlecase.json')\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                let state_list = item.map(item => item.name);\r\n\r\n                this.setState({\r\n                    states: state_list\r\n                });\r\n            });\r\n    }\r\n\r\n    handleToggle = () => {\r\n        this.setState({ sameShip: !this.state.sameShip });\r\n    }\r\n\r\n    handleSelect = value => {\r\n        this.setState({\r\n            selected_state: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Checkbox onChange={this.handleToggle} style={{ marginBottom: '20px' }}>Same as Shipping</Checkbox>\r\n\r\n                <div className={!this.state.sameShip ? 'bill-addr fade-in' : 'bill-addr'}>\r\n                    <Form.Item\r\n                        label='Name'\r\n                        name='bill_name'\r\n                        rules={[{\r\n                            required: !this.state.sameShip,\r\n                            message: 'Name is required'\r\n                        }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='Email'\r\n                        name='bill_email'\r\n                        rules={[{\r\n                            required: !this.state.sameShip,\r\n                            message: 'Email is required'\r\n                        }]}\r\n                    >\r\n                        <Input type='email' />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='Address'\r\n                        name='bill_address1'\r\n                        rules={[{\r\n                            required: !this.state.sameShip,\r\n                            message: 'Address is required'\r\n                        }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='Apt/Suite/Room'\r\n                        name='bill_address2'\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='City'\r\n                        name='bill_city'\r\n                        rules={[{\r\n                            required: !this.state.sameShip,\r\n                            message: 'City is required'\r\n                        }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='State'\r\n                        name='bill_state'\r\n                        rules={[{\r\n                            required: !this.state.sameShip,\r\n                            message: 'State is required'\r\n                        }]}\r\n                    >\r\n                        <Select placeholder='Select state'>\r\n                            {\r\n                                this.state.states.map(item => (<Option key={item} value={item}>{item}</Option>))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='ZIP Code'\r\n                        name='bill_zip'\r\n                        rules={[{\r\n                            required: !this.state.sameShip,\r\n                            message: 'ZIP is required'\r\n                        }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <Form.Item\r\n                    label='Payment'\r\n                    name='payment'\r\n                    rules={[{\r\n                        required: true,\r\n                        message: 'Payment is required'\r\n                    }]}\r\n                >\r\n                    <CardElement />\r\n                </Form.Item>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Billing;","import React from 'react';\r\n\r\nimport { Typography, Row, Col } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nclass SummaryItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            name: 'Loading...',\r\n            description: 'Loading...',\r\n            base_price: 'Loading...',\r\n            wood: 'Loading...',\r\n            printName: '',\r\n            modifier: { 'Loading...': 0 },\r\n            subtotal: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(`${process.env.REACT_APP_API}/sku/` + this.props.sku)\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                this.setState({\r\n                    loading: false,\r\n                    name: item.item.name,\r\n                    description: item.item.description,\r\n                    base_price: item.item.base_price,\r\n                    wood: item.wood,\r\n                    printName: item.printName,\r\n                    modifier: item.item.modifiers ? item.item.modifiers[item.modifier] : { name: '' },\r\n                    subtotal: item.item.base_price + (item.item.modifiers ? item.item.modifiers[item.modifier].price : 0)\r\n                });\r\n\r\n                this.props.addFunc((item.item.base_price + item.item.modifiers[item.modifier].price) * this.props.qty);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row gutter={32} justify='end'>\r\n                <Col style={{ maxWidth: '70%' }}>\r\n                    <Title level={4} span={8}>{`${this.props.qty}x ${this.state.modifier.name} ${this.state.name} ${this.state.wood ? '(' + this.state.wood + ')' : ''}${this.state.printName ? '(' + this.state.printName + ')' : ''}`}</Title>\r\n                </Col>\r\n                <Col>\r\n                    <Title level={4} span={4}>\r\n                        <Text strong>{`$${this.state.subtotal}.00`}</Text>\r\n                    </Title>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryItem;","import React from 'react';\r\n\r\nimport { Divider, Typography, Row, Col } from 'antd';\r\n\r\nimport SummaryItem from './SummaryItem';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: 5\r\n        };\r\n    }\r\n\r\n    addToTotal = amt => {\r\n        this.setState({\r\n            total: this.state.total + amt\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: 'right' }}>\r\n                {this.props.items.map(item => (<SummaryItem key={item.sku}\r\n                    sku={item.sku} qty={item.qty} addFunc={this.addToTotal} />))}\r\n                <Row justify='end' gutter={32} style={{ marginTop: '16px' }}>\r\n                    <Col style={{ maxWidth: '70%' }}>\r\n                        <Title level={4}>{`Shipping:`}</Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Title level={4}>\r\n                            <Text strong>{`$5.00`}</Text>\r\n                        </Title>\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row justify='end' gutter={32}>\r\n                    <Col>\r\n                        <Title level={4}>{`Total:`}</Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Title level={4} >\r\n                            <Text strong>{`$${this.state.total}.00`}</Text>\r\n                        </Title>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport { CardElement } from '@stripe/react-stripe-js';\r\nimport { Row, Col, Steps, Button, Form, Result, Spin } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { removeAll } from '../actions/actions';\r\n\r\nimport Shipping from './checkout_steps/Shipping';\r\nimport Billing from './checkout_steps/Billing';\r\nimport Summary from './checkout_steps/Summary';\r\n\r\nimport './CheckoutForm.css';\r\n\r\nclass CheckoutForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            purchaseComplete: false,\r\n            loading: false,\r\n            current: 0,\r\n            items: [...this.props.items.map(item => item.sku)],\r\n            secret: '',\r\n            error: false,\r\n            errorMsg: ''\r\n        };\r\n\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(`${process.env.REACT_APP_API}/checkout`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'text/plain' },\r\n            body: JSON.stringify({ items: this.props.items })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ secret: data.secret })\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    async submit(ev) {\r\n        let values = ev;\r\n\r\n        this.setState({ loading: true });\r\n\r\n        const { stripe, elements } = this.props;\r\n\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not loaded yet. Make sure to disable\r\n            // form submission until Stripe.js has loaded.\r\n            return;\r\n        }\r\n\r\n        const { error, paymentIntent } = await stripe.confirmCardPayment(\r\n            this.state.secret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement),\r\n                billing_details: {\r\n                    address: {\r\n                        city: values.bill_city ? values.bill_city : values.city,\r\n                        country: 'US',\r\n                        line1: values.bill_address1 ? values.bill_address1 : values.address1,\r\n                        line2: values.bill_address2 ? values.bill_address2 : values.address2,\r\n                        postal_code: values.bill_zip ? values.bill_zip : values.zip,\r\n                        state: values.bill_state ? values.bill_state : values.state\r\n                    },\r\n                    email: values.bill_email ? values.bill_email : values.email,\r\n                    name: values.bill_name ? values.bill_name : values.name\r\n                }\r\n            },\r\n            shipping: {\r\n                address: {\r\n                    city: values.city,\r\n                    country: 'US',\r\n                    line1: values.address1,\r\n                    line2: values.address2,\r\n                    postal_code: values.zip,\r\n                    state: values.state\r\n                },\r\n                name: values.name\r\n            }\r\n        });\r\n\r\n        if (error) {\r\n            console.log('[error]', error);\r\n            this.setState({ error: true, loading: false, errorMsg: error.message });\r\n        } else {\r\n            if (paymentIntent.status === 'succeeded') {\r\n                // clear cart\r\n                this.props.dispatch(removeAll());\r\n                // set complete state to true\r\n                this.setState({ purchaseComplete: true, loading: false });\r\n            }\r\n        };\r\n    }\r\n\r\n    next = () => {\r\n        const current = this.state.current + 1;\r\n        this.setState({ current });\r\n    }\r\n\r\n    prev = () => {\r\n        const current = this.state.current - 1;\r\n        this.setState({ current })\r\n    }\r\n\r\n    render() {\r\n        const { stripe } = this.props;\r\n\r\n        const steps = [\r\n            {\r\n                title: 'Shipping',\r\n                content: <Shipping />\r\n            },\r\n            {\r\n                title: 'Billing',\r\n                content: <Billing />\r\n            },\r\n            {\r\n                title: 'Confirm',\r\n                content: <Summary items={this.props.items} />\r\n            }\r\n        ]\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {this.state.purchaseComplete === false &&\r\n                    this.state.error === false ?\r\n                    <Row>\r\n                        <Col span={8} />\r\n                        <Col span={8}>\r\n                            <h1>Checkout</h1>\r\n                            <div style={{ margin: '40px 12.5% 50px', textAlign: 'center' }}>\r\n                                <Spin\r\n                                    spinning={this.state.loading} tip='Processing...'>\r\n                                    <Steps current={this.state.current}>\r\n                                        {\r\n                                            steps.map(item => {\r\n                                                return (\r\n                                                    <Steps.Step key={item.title} title={item.title} />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Steps>\r\n                                    <Form\r\n                                        {...formItemLayout}\r\n                                        onFinish={this.submit}\r\n                                    >\r\n                                        <div className='steps-content' style={{ margin: '40px 0' }}>\r\n                                            {steps.map(({ title, content }, i) => (\r\n                                                <div\r\n                                                    key={title}\r\n                                                    className={i === this.state.current ? 'form-cont fade-in' : 'form-cont'}\r\n                                                >\r\n                                                    {content}\r\n                                                </div>\r\n                                            ))\r\n                                            }\r\n                                        </div>\r\n                                        <div className='steps-action'>\r\n                                            {this.state.current < steps.length - 1 && (\r\n                                                <Button type='primary' onClick={() => this.next()}>\r\n                                                    Next\r\n                                                </Button>\r\n                                            )}\r\n                                            {this.state.current === steps.length - 1 && (\r\n                                                <Button\r\n                                                    type='primary'\r\n                                                    htmlType='submit'\r\n                                                    disabled={!stripe}\r\n                                                >\r\n                                                    Place Order\r\n                                                </Button>\r\n                                            )}\r\n                                            {this.state.current > 0 && (\r\n                                                <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                                                    Previous\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    </Form>\r\n                                </Spin>\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={8} />\r\n                    </Row>\r\n                    : null\r\n                }\r\n                {this.state.purchaseComplete && !this.state.loading ?\r\n                    <Result\r\n                        status='success'\r\n                        title='Purchase Complete!'\r\n                        subTitle='You will receive a personal email once your order enters production.'\r\n                        extra={\r\n                            <Button\r\n                                onClick={() => this.props.history.push('/')}>\r\n                                Back\r\n                            </Button>\r\n                        }\r\n                    /> : null\r\n                }\r\n                {this.state.error && !this.state.loading ?\r\n                    <Result\r\n                        status='error'\r\n                        title='Purchase Failed.'\r\n                        subTitle={this.state.errorMsg}\r\n                        extra={\r\n                            <Button\r\n                                onClick={() => this.props.history.push('/')}>\r\n                                Back\r\n                            </Button>\r\n                        }\r\n                    /> : null\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCheckoutForm = connect()(CheckoutForm);\r\n\r\nexport default withRouter(CheckoutForm);","import React from 'react';\r\nimport { Elements, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport CheckoutForm from './CheckoutForm';\r\n\r\n// don't worry - this is a public API key.\r\nconst stripePromise = loadStripe('pk_live_iryttCVg5Yi3eiJrcm7QuUyc00LOkZLI8l');\r\n\r\nclass Checkout extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Elements stripe={stripePromise}>\r\n                    <ElementsConsumer>\r\n                        {({ stripe, elements }) => (\r\n                            <CheckoutForm\r\n                                items={this.props.items}\r\n                                stripe={stripe}\r\n                                elements={elements}\r\n                            />\r\n                        )}\r\n                    </ElementsConsumer>\r\n                </Elements>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;\r\n","import { connect } from 'react-redux';\r\nimport Checkout from '../components/Checkout';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        items: state.cartItems\r\n    };\r\n}\r\n\r\nconst CurrentCheckout = connect(mapStateToProps)(Checkout);\r\n\r\nexport default CurrentCheckout;","import React from 'react';\n\nimport { Result } from 'antd';\n\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nclass Batons extends React.Component {\n    render() {\n        return (\n            <Result\n                icon={<ClockCircleOutlined />}\n                title='Coming Soon...'\n                subTitle='Contact me if you are interested.'\n            />\n        );\n    }\n}\n\nexport default Batons;","import React from 'react';\n\nimport { Result } from 'antd';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <Result\n                status='404'\n                title='404'\n                subTitle=\"You're in the wrong neck of the woods, pardner... Best go back to where you came from...\"\n            />\n        );\n    }\n}\n\nexport default NotFound;","import React from 'react';\n\nimport { Avatar, Row, Col, Typography, Button } from 'antd';\n\nimport { InstagramOutlined, GithubOutlined, LinkedinOutlined } from '@ant-design/icons';\n\nconst { Title, Paragraph } = Typography;\n\nclass About extends React.Component {\n    render() {\n        return (\n            <>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'center' }}>\n                        <Avatar\n                            src='https://live.staticflickr.com/65535/49762215618_113eb431dd.jpg'\n                            size={256}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'center', marginTop: '1.17em' }}>\n                        <Title>Hello!</Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'center' }}>\n                        <Paragraph>\n                            My name is Noah Grove.\n                        </Paragraph>\n                        <Paragraph>\n                            I am a Computer Science student at UC Davis,\n                            <br />\n                            and I made this website to showcase my work.\n                        </Paragraph>\n                        <Paragraph>\n                            My lathe is the cheapest mini-lathe from\n                            <br />\n                            Harbor Freight, but it gets the job done.\n                            <br />\n                            I use carbide tools since I don't have\n                            <br />\n                            room for a bench grinder to sharpen HSS,\n                            <br />\n                            but I do prefer HSS tools (they're more fun).\n                        </Paragraph>\n                        <Paragraph>\n                            I shoot with a Mamiya RB67, primarily with\n                            <br />\n                            Kodak Portra 400, but I occassionally\n                            <br />\n                            shoot with CineStill 800T.\n                            <br />\n                            I prefer my personal work to not have\n                            <br />\n                            people in it, but I will shoot portraiture\n                            <br />\n                            if it feels like it makes sense with my style.\n                        </Paragraph>\n                        <Paragraph>\n                            I produce music, under the name \"Kuesa\",\n                            <br />\n                            and you can find my work on all major platforms.\n                            <br />\n                            My style is chiptune-forward. I write mostly in\n                            <br />\n                            Renoise, FamiTracker, and sometimes FL Studio.\n                        </Paragraph>\n                        <Paragraph>\n                            I primarily play English Horn.\n                            <br />\n                            I also play Clarinet and Banjo, and\n                            <br />\n                            a few other instruments.\n                        </Paragraph>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={9} />\n                    <Col span={2} style={{ textAlign: 'center' }}>\n                        <a href='https://www.instagram.com/kuesasan/'>\n                            <Title>\n                                <InstagramOutlined />\n                            </Title>\n                        </a>\n                    </Col>\n                    <Col span={2} style={{ textAlign: 'center' }}>\n                        <a href='https://github.com/kuesa'>\n                            <Title>\n                                <GithubOutlined />\n                            </Title>\n                        </a>\n                    </Col>\n                    <Col span={2} style={{ textAlign: 'center' }}>\n                        <a href='https://www.linkedin.com/in/noah-grove-605a35157/'>\n                            <Title>\n                                <LinkedinOutlined />\n                            </Title>\n                        </a>\n                    </Col>\n                    <Col span={9} />\n                </Row>\n            </>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Prints from './components/Prints';\r\nimport CurrentCart from './containers/CurrentCart';\r\nimport Navbar from './components/Navbar';\r\nimport Pens from './components/Pens';\r\nimport Product from './components/Product';\r\nimport CurrentCheckout from './containers/CurrentCheckout';\r\nimport Batons from './components/Batons';\r\nimport NotFound from './components/NotFound';\r\nimport About from './components/About';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path='/' exact component={Prints} />\r\n          <Route path='/cart' component={CurrentCart} />\r\n          <Route path='/pens' exact component={Pens} />\r\n          <Route path='/pens/fountain'><Product productId={1} /></Route>\r\n          <Route path='/pens/rollerball'><Product productId={2} /></Route>\r\n          <Route path='/prints' exact component={Prints} />\r\n          <Route path='/prints/:id'><Product productId={9} /></Route>\r\n          <Route path='/batons' component={Batons} />\r\n          <Route path='/about' component={About} />\r\n          <Route path='/checkout' component={CurrentCheckout} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ADD_ITEM, REMOVE_ITEM, CHANGE_QUANTITY, REMOVE_ALL } from '../actions/actionTypes';\r\n\r\nexport function cartItems(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            let found = false;\r\n            let data = state.map((item) => {\r\n                if (item.sku === action.sku) {\r\n                    found = true;\r\n                    return {\r\n                        sku: action.sku,\r\n                        qty: item.qty + 1\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n\r\n            return found ? data : [...state, { sku: action.sku, qty: action.qty }];\r\n\r\n        case REMOVE_ITEM:\r\n            return state.filter((item) => {\r\n                return (item.sku !== action.sku);\r\n            });\r\n\r\n        case CHANGE_QUANTITY:\r\n            return state.map((item) => {\r\n                if (item.sku === action.sku) {\r\n                    return Object.assign({}, item, {\r\n                        qty: action.qty\r\n                    });\r\n                }\r\n                return item;\r\n            });\r\n\r\n        case REMOVE_ALL:\r\n            return [];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport * as reducers from './reducers';\r\n\r\nconst cart = combineReducers(reducers);\r\n\r\nexport default cart;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nimport cart from './reducers/cart';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, cart);\r\nconst store = createStore(persistedReducer, window.STATE_FROM_SERVER);\r\nconst persistor = persistStore(store);\r\n\r\n//store.subscribe(() => console.log(store.getState()));\r\n\r\n//unsubscribe();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}